name: Restart Telegram Bot

on:
  workflow_dispatch:
  
  # Optionally, you can schedule periodic restarts
  # schedule:
  #   - cron: '0 3 * * *'  # Daily at 3 AM UTC

jobs:
  restart-telegram-bot:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass
      
      - name: Check Required Environment Variables
        run: |
          echo "üîç Checking required environment variables..."
          MISSING_VARS=""
          
          # List of required variables
          REQUIRED_VARS=(
            "TELEGRAM_BOT_SERVER_USER"
            "TELEGRAM_BOT_SERVER_PASSWORD"
            "TELEGRAM_BOT_SERVER_HOST"
            "TELEGRAM_BOT_SERVER_PORT"
            "TELEGRAM_BOT_SERVER_ROOT_PATH"
            "TELEGRAM_BOT_SERVER_DOCKER_COMPOSE_PATH"
          )
          
          for var in "${REQUIRED_VARS[@]}"; do
            if [ -z "${!var}" ]; then
              MISSING_VARS="$MISSING_VARS $var"
              echo "‚ùå Missing: $var"
            else
              echo "‚úÖ Found: $var"
            fi
          done
          
          if [ ! -z "$MISSING_VARS" ]; then
            echo ""
            echo "‚ùå Missing required environment variables:$MISSING_VARS"
            echo "Please configure these secrets in your GitHub repository settings."
            echo "Run: node scripts/configure-github-secrets.mjs"
            exit 1
          fi
          
          echo "‚úÖ All required environment variables are configured"
        env:
          TELEGRAM_BOT_SERVER_USER: ${{ secrets.TELEGRAM_BOT_SERVER_USER }}
          TELEGRAM_BOT_SERVER_PASSWORD: ${{ secrets.TELEGRAM_BOT_SERVER_PASSWORD }}
          TELEGRAM_BOT_SERVER_HOST: ${{ secrets.TELEGRAM_BOT_SERVER_HOST }}
          TELEGRAM_BOT_SERVER_PORT: ${{ secrets.TELEGRAM_BOT_SERVER_PORT }}
          TELEGRAM_BOT_SERVER_ROOT_PATH: ${{ secrets.TELEGRAM_BOT_SERVER_ROOT_PATH }}
          TELEGRAM_BOT_SERVER_DOCKER_COMPOSE_PATH: ${{ secrets.TELEGRAM_BOT_SERVER_DOCKER_COMPOSE_PATH }}
      
      - name: Restart Telegram Bot with Log Backup
        env:
          SSHPASS: ${{ secrets.TELEGRAM_BOT_SERVER_PASSWORD }}
        run: |
          echo "Restarting Telegram Bot on ${{ secrets.TELEGRAM_BOT_SERVER_HOST }}..."
          
          # SSH into the server and restart the telegram bot service
          sshpass -e ssh -o StrictHostKeyChecking=no -p ${{ secrets.TELEGRAM_BOT_SERVER_PORT }} ${{ secrets.TELEGRAM_BOT_SERVER_USER }}@${{ secrets.TELEGRAM_BOT_SERVER_HOST }} << 'EOF'
            # Create timestamp for unique file names (using only dashes)
            TIMESTAMP=$(date +"%Y-%m-%d-%H-%M-%S")
            LOGS_FILENAME="telegram-bot-logs-${TIMESTAMP}.tar.gz"
            
            echo "1. Creating log snapshot before restart..."
            # Navigate to the project directory first to get correct container name
            cd ${{ secrets.TELEGRAM_BOT_SERVER_ROOT_PATH }}
            
            # Get the container name from docker-compose ps output
            CONTAINER_NAME=$(docker-compose -f ${{ secrets.TELEGRAM_BOT_SERVER_DOCKER_COMPOSE_PATH }} ps | grep "Up" | awk '{print $1}' | head -1)
            
            if [ ! -z "$CONTAINER_NAME" ]; then
              # Backup logs from the running container
              docker logs $CONTAINER_NAME --timestamps > ~/telegram-bot-logs-${TIMESTAMP}.txt 2>&1
              
              # Archive the logs
              tar -czvf ~/${LOGS_FILENAME} -C ~ telegram-bot-logs-${TIMESTAMP}.txt
              
              # Remove temporary log file
              rm ~/telegram-bot-logs-${TIMESTAMP}.txt
              
              echo "Log snapshot saved as: ~/${LOGS_FILENAME}"
              LOG_BACKUP_CREATED="true"
            else
              echo "No running container found, skipping log backup"
              LOG_BACKUP_CREATED="false"
            fi
            
            echo "2. Stopping existing containers..."
            docker-compose -f ${{ secrets.TELEGRAM_BOT_SERVER_DOCKER_COMPOSE_PATH }} down
            
            echo "3. Starting containers with rebuild..."
            docker-compose -f ${{ secrets.TELEGRAM_BOT_SERVER_DOCKER_COMPOSE_PATH }} up -d --build
            
            # Wait for services to start
            echo "4. Waiting for services to start..."
            sleep 10
            
            # Check if containers are running
            echo "5. Checking container status..."
            docker-compose -f ${{ secrets.TELEGRAM_BOT_SERVER_DOCKER_COMPOSE_PATH }} ps
            
            if [ "$LOG_BACKUP_CREATED" = "true" ]; then
              echo "Restart complete. Log backup available at: ~/${LOGS_FILENAME}"
            else
              echo "Restart complete. No log backup created (no previous container was running)."
            fi
          EOF
      
      - name: Notify completion
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Telegram Bot restarted successfully"
          else
            echo "‚ùå Failed to restart Telegram Bot"
          fi